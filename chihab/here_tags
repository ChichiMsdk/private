!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	M,module	/modules/
!_TAG_KIND_DESCRIPTION!C++	P,partition	/partitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!DosBatch	l,label	/labels/
!_TAG_KIND_DESCRIPTION!DosBatch	v,variable	/variables/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!DosBatch	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	C:/devel/chihab/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/e2308b07c/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	exported	/exported with "exported imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!module	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!module	partOwner	/used for specifying a partition/
!_TAG_ROLE_DESCRIPTION!C++!partition	imported	/imported with "imported ..."/
ASAN_ENABLED	./cm_macro_defs.c	/^    #define ASAN_ENABLED /;"	d	file:
Allocator	./cm_allocator.c	/^typedef struct Allocator$/;"	s	file:
Allocator	./cm_allocator.c	/^} Allocator;$/;"	t	typeref:struct:Allocator	file:
AsanPoisonMemoryRegion	./cm_macro_defs.c	/^  #define AsanPoisonMemoryRegion(/;"	d	file:
AsanUnpoisonMemoryRegion	./cm_macro_defs.c	/^  #define AsanUnpoisonMemoryRegion(/;"	d	file:
CFLR_LEN	./cm_error_handling.c	/^#define CFLR_LEN /;"	d	file:
CHECK_EXIT	./cm_error_handling.c	/^  #define CHECK_EXIT(/;"	d	file:
CM_ALLOCATOR_C	./cm_allocator.c	/^#define CM_ALLOCATOR_C$/;"	d	file:
CM_API_FAIL	./cm_error_handling.c	/^  CM_API_FAIL           = 1,$/;"	e	enum:CM_CODE	file:
CM_CODE	./cm_error_handling.c	/^typedef enum CM_CODE {$/;"	g	file:
CM_CODE	./cm_error_handling.c	/^} CM_CODE;$/;"	t	typeref:enum:CM_CODE	file:
CM_CODE_MAX	./cm_error_handling.c	/^  CM_CODE_MAX$/;"	e	enum:CM_CODE	file:
CM_DIR_OPEN_FAIL	./cm_error_handling.c	/^  CM_DIR_OPEN_FAIL      = 21,$/;"	e	enum:CM_CODE	file:
CM_ENTRY_H	./cm_entry.h	/^#define CM_ENTRY_H$/;"	d
CM_ERROR_HANDLING_C	./cm_error_handling.c	/^#define CM_ERROR_HANDLING_C$/;"	d	file:
CM_FILE_MAP_FAIL	./cm_error_handling.c	/^  CM_FILE_MAP_FAIL      = 24,$/;"	e	enum:CM_CODE	file:
CM_FILE_MAP_TOO_SMALL	./cm_error_handling.c	/^  CM_FILE_MAP_TOO_SMALL = 25,$/;"	e	enum:CM_CODE	file:
CM_FILE_OPEN_FAIL	./cm_error_handling.c	/^  CM_FILE_OPEN_FAIL     = 20,$/;"	e	enum:CM_CODE	file:
CM_FONT_ERROR	./cm_error_handling.c	/^  CM_FONT_ERROR         = 30,$/;"	e	enum:CM_CODE	file:
CM_GUID_H	./cm_guid.h	/^#define CM_GUID_H$/;"	d
CM_HEAP_ALLOC_FAIL	./cm_error_handling.c	/^  CM_HEAP_ALLOC_FAIL    = 51,$/;"	e	enum:CM_CODE	file:
CM_HEAP_CREATE_FAIL	./cm_error_handling.c	/^  CM_HEAP_CREATE_FAIL   = 50,$/;"	e	enum:CM_CODE	file:
CM_INVALID_DATA	./cm_error_handling.c	/^  CM_INVALID_DATA       = 10,$/;"	e	enum:CM_CODE	file:
CM_INVALID_SIZE	./cm_error_handling.c	/^  CM_INVALID_SIZE       = 7,$/;"	e	enum:CM_CODE	file:
CM_IO_C	./cm_io.c	/^#define CM_IO_C$/;"	d	file:
CM_MACRO_DEFS_H	./cm_macro_defs.c	/^#define CM_MACRO_DEFS_H$/;"	d	file:
CM_MEMORY_C	./cm_memory.c	/^#define CM_MEMORY_C$/;"	d	file:
CM_OK	./cm_error_handling.c	/^  CM_OK                 = 0,$/;"	e	enum:CM_CODE	file:
CM_OS_SET_H	./cm_os_set.h	/^#define CM_OS_SET_H$/;"	d
CM_OVERFLOW	./cm_error_handling.c	/^  CM_OVERFLOW           = 8,$/;"	e	enum:CM_CODE	file:
CM_SIZE_TOO_BIG	./cm_error_handling.c	/^  CM_SIZE_TOO_BIG       = 6,$/;"	e	enum:CM_CODE	file:
CM_STRING_C	./cm_string.c	/^#define CM_STRING_C$/;"	d	file:
CM_TIMER_C	./chichi_timer.c	/^#define CM_TIMER_C$/;"	d	file:
CM_WIN32_C	./cm_win32.c	/^#define CM_WIN32_C$/;"	d	file:
COMPILER_CLANG	./cm_os_set.h	/^  #define COMPILER_CLANG /;"	d
COMPILER_GCC	./cm_os_set.h	/^  #define COMPILER_GCC /;"	d
COMPILER_MSVC	./cm_os_set.h	/^  #define COMPILER_MSVC /;"	d
COUNTOF	./cm_macro_defs.c	/^#define COUNTOF(/;"	d	file:
CPP_LANG	./cm_os_set.h	/^  #define CPP_LANG /;"	d
C_LANG	./cm_os_set.h	/^  #define C_LANG /;"	d
DO	./cm_macro_defs.c	/^#define DO /;"	d	file:
ENDIF	./cm_macro_defs.c	/^#define ENDIF /;"	d	file:
ENTRY	./cm_entry.h	/^      #define ENTRY /;"	d
ET_CM_CODE	./cm_error_handling.c	/^  ET_CM_CODE       = 0x5,$/;"	e	enum:ErrorType	file:
ET_D3D12	./cm_error_handling.c	/^  ET_D3D12         = 0x4,$/;"	e	enum:ErrorType	file:
ET_HRESULT	./cm_error_handling.c	/^  ET_HRESULT       = 0x0,$/;"	e	enum:ErrorType	file:
ET_INT	./cm_error_handling.c	/^  ET_INT           = 0x1,$/;"	e	enum:ErrorType	file:
ET_UNKNOWN	./cm_error_handling.c	/^  ET_UNKNOWN       = 0x6,$/;"	e	enum:ErrorType	file:
ET_WIN_BOOL	./cm_error_handling.c	/^  ET_WIN_BOOL      = 0x2,$/;"	e	enum:ErrorType	file:
ET_WIN_HANDLE	./cm_error_handling.c	/^  ET_WIN_HANDLE    = 0x3,$/;"	e	enum:ErrorType	file:
EXIT_FAIL	./cm_macro_defs.c	/^#define EXIT_FAIL()     exit(EXIT_FAILU/;"	d	file:
EXIT_FAILURE	./cm_macro_defs.c	/^  #define EXIT_FAILURE /;"	d	file:
EXIT_STR	./cm_error_handling.c	/^#define EXIT_STR /;"	d	file:
EXIT_SUCCEED	./cm_macro_defs.c	/^#define EXIT_SUCCEED(/;"	d	file:
EXIT_SUCCESS	./cm_macro_defs.c	/^  #define EXIT_SUCCESS /;"	d	file:
EXTERN_C	./cm_macro_defs.c	/^    #define EXTERN_C /;"	d	file:
ErrorCode	./cm_error_handling.c	/^typedef struct ErrorCode$/;"	s	file:
ErrorCode	./cm_error_handling.c	/^} ErrorCode;$/;"	t	typeref:struct:ErrorCode	file:
ErrorType	./cm_error_handling.c	/^typedef enum ErrorType$/;"	g	file:
ErrorType	./cm_error_handling.c	/^} ErrorType;$/;"	t	typeref:enum:ErrorType	file:
FT	./cm_macro_defs.c	/^#define FT /;"	d	file:
GB	./cm_macro_defs.c	/^#define GB(/;"	d	file:
HINST_THISCOMPONENT	./cm_entry.h	/^      #define HINST_THISCOMPONENT /;"	d
HR_IF	./cm_macro_defs.c	/^#define HR_IF(/;"	d	file:
IF	./cm_macro_defs.c	/^#define IF(/;"	d	file:
INFINITE_LOOP	./cm_macro_defs.c	/^#define INFINITE_LOOP /;"	d	file:
KB	./cm_macro_defs.c	/^#define KB(/;"	d	file:
MAX_ERROR_TYPE	./cm_error_handling.c	/^  MAX_ERROR_TYPE$/;"	e	enum:ErrorType	file:
MB	./cm_macro_defs.c	/^#define MB(/;"	d	file:
MICRO_S	./chichi_timer.c	/^#define MICRO_S	/;"	d	file:
MILLI_S	./chichi_timer.c	/^#define MILLI_S	/;"	d	file:
MU	./cm_macro_defs.c	/^#define MU /;"	d	file:
NANO_S	./chichi_timer.c	/^#define NANO_S	/;"	d	file:
ND	./cm_macro_defs.c	/^#define ND /;"	d	file:
NOGDI	./cm_macro_defs.c	/^  #define NOGDI$/;"	d	file:
NOIME	./cm_macro_defs.c	/^  #define NOIME$/;"	d	file:
NOMCX	./cm_macro_defs.c	/^  #define NOMCX$/;"	d	file:
NONLS	./cm_macro_defs.c	/^  #define NONLS$/;"	d	file:
NOPROFILER	./cm_macro_defs.c	/^  #define NOPROFILER$/;"	d	file:
NOSERVICE	./cm_macro_defs.c	/^  #define NOSERVICE$/;"	d	file:
NO_ASAN	./cm_macro_defs.c	/^    #define NO_ASAN /;"	d	file:
NO_CRT_LINKED	./test.c	/^#define NO_CRT_LINKED$/;"	d	file:
OFFSETOF	./cm_macro_defs.c	/^#define OFFSETOF(/;"	d	file:
OS_LINUX	./cm_os_set.h	/^    #define OS_LINUX /;"	d
OS_LINUX	./cm_os_set.h	/^  #define OS_LINUX /;"	d
OS_MAC	./cm_os_set.h	/^    #define OS_MAC /;"	d
OS_MAC	./cm_os_set.h	/^  #define OS_MAC /;"	d
OS_WINDOWS	./cm_os_set.h	/^    #define OS_WINDOWS /;"	d
OS_WINDOWS	./cm_os_set.h	/^  #define OS_WINDOWS /;"	d
PROC_THREADS_C	./cm_proc_threads.c	/^#define PROC_THREADS_C$/;"	d	file:
R	./cm_error_handling.c	/^#define R(/;"	d	file:
RETURN_FROM_MAIN	./cm_entry.h	/^  #define RETURN_FROM_MAIN(/;"	d
SECOND	./chichi_timer.c	/^#define SECOND	/;"	d	file:
STDERROR	./cm_macro_defs.c	/^  #define STDERROR(/;"	d	file:
STDINPUT	./cm_macro_defs.c	/^  #define STDINPUT(/;"	d	file:
STDOUT	./cm_macro_defs.c	/^  #define STDOUT(/;"	d	file:
STR_FMT	./cm_macro_defs.c	/^#define STR_FMT /;"	d	file:
SUB_CONSOLE	./test.c	/^#define SUB_CONSOLE$/;"	d	file:
Slice	./cm_io.c	/^typedef struct Slice$/;"	s	file:
Slice	./cm_io.c	/^}Slice;$/;"	t	typeref:struct:Slice	file:
Str8	./cm_string.c	/^typedef struct Str8$/;"	s	file:
Str8	./cm_string.c	/^} Str8;$/;"	t	typeref:struct:Str8	file:
TB	./cm_macro_defs.c	/^#define TB(/;"	d	file:
Trap	./cm_macro_defs.c	/^  #define Trap(/;"	d	file:
Unit_t	./chichi_timer.c	/^typedef struct Unit_t	{e_unit_t unit;} Unit_t; $/;"	s	file:
Unit_t	./chichi_timer.c	/^typedef struct Unit_t	{e_unit_t unit;} Unit_t; $/;"	t	typeref:struct:Unit_t	file:
WHILE	./cm_macro_defs.c	/^#define WHILE /;"	d	file:
WIN32_LEAN_AND_MEAN	./cm_macro_defs.c	/^  #define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_NO_BS	./cm_proc_threads.c	/^#define WIN32_NO_BS$/;"	d	file:
WIN32_NO_BS	./test.c	/^#define WIN32_NO_BS$/;"	d	file:
_CRT_CONCATENATE	./cm_macro_defs.c	/^  #define _CRT_CONCATENATE(a, b)    _CRT_CONCATENATE_/;"	d	file:
_CRT_CONCATENATE_	./cm_macro_defs.c	/^  #define _CRT_CONCATENATE_(/;"	d	file:
_CRT_SECURE_NO_WARNINGS	./cm_macro_defs.c	/^  #define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_CRT_STRINGIZE	./cm_macro_defs.c	/^  #define _CRT_STRINGIZE(x)         _CRT_STRINGIZE_/;"	d	file:
_CRT_STRINGIZE_	./cm_macro_defs.c	/^  #define _CRT_STRINGIZE_(/;"	d	file:
_CRT_UNPARENTHESIZE	./cm_macro_defs.c	/^  #define _CRT_UNPARENTHESIZE(...)  _CRT_UNPARENTHESIZE_/;"	d	file:
_CRT_UNPARENTHESIZE_	./cm_macro_defs.c	/^  #define _CRT_UNPARENTHESIZE_(/;"	d	file:
_CRT_WIDE	./cm_macro_defs.c	/^  #define _CRT_WIDE(s)              _CRT_WIDE_/;"	d	file:
_CRT_WIDE_	./cm_macro_defs.c	/^  #define _CRT_WIDE_(/;"	d	file:
__ImageBase	./cm_entry.h	/^      EXTERN_C IMAGE_DOS_HEADER __ImageBase;$/;"	v	typeref:typename:EXTERN_C IMAGE_DOS_HEADER
__anonac2ecf30010a	./cm_error_handling.c	/^  union {$/;"	u	struct:ErrorCode	file:
_fltused	./cm_macro_defs.c	/^    EXTERN_C int _fltused             = 0;$/;"	v	typeref:typename:EXTERN_C int
allocator_create	./cm_allocator.c	/^allocator_create(MU size_t size)$/;"	f	typeref:typename:Allocator
asanlibs	./build.bat	/^set asanlibs=clang_rt.asan_static_runtime_thunk-x86_64.lib$/;"	v
assert	./cm_macro_defs.c	/^    #define assert(/;"	d	file:
atoi	./cm_string.c	/^#define atoi(str) fast_atoi_/;"	d	file:
atomic	./cm_macro_defs.c	/^#define atomic /;"	d	file:
bin	./build.bat	/^set bin=bin$/;"	v
block	./cm_allocator.c	/^  void*     block;$/;"	m	struct:Allocator	typeref:typename:void *	file:
buffer	./cm_io.c	/^  Slice     buffer;$/;"	m	struct:cmFile	typeref:typename:Slice	file:
buflen_until_int	./cm_string.c	/^buflen_until_int(void* buf, int c)$/;"	f	typeref:typename:int	file:
buflen_until_int_n	./cm_string.c	/^buflen_until_int_n(void* buf, int c, int size)$/;"	f	typeref:typename:int	file:
c_strlen	./cm_string.c	/^c_strlen(char* str)$/;"	f	typeref:typename:size_t	file:
caller_fn_name	./cm_error_handling.c	/^  char*     caller_fn_name;$/;"	m	struct:ErrorCode	typeref:typename:char *	file:
capacity	./cm_allocator.c	/^  size_t    capacity;$/;"	m	struct:Allocator	typeref:typename:size_t	file:
cc	./build.bat	/^set cc=cl %show_includes% \/nologo %cc_diag% %cc_options%$/;"	v
cc_asan	./build.bat	/^rem set cc_asan=\/fsanitize=address$/;"	v
cc_debug	./build.bat	/^rem set cc_debug=\/Zl$/;"	v
cc_debug	./build.bat	/^set cc_debug=%cc_debug% \/Zi$/;"	v
cc_def	./build.bat	/^rem set cc_def=\/DDEBUG \/DNDEBUG \/DRYU_NOCRT$/;"	v
cc_def	./build.bat	/^set cc_def=\/DDEBUG$/;"	v
cc_diag	./build.bat	/^set cc_diag=\/diagnostics:caret \/Zc:preprocessor \/Zc:auto$/;"	v
cc_flags	./build.bat	/^set cc_flags=%cc_warn% %cc_def% %cc_debug% \/Zl \/Gs9999999 %cc_std% %cc_opti% %cc_includes% %cc/;"	v
cc_includes	./build.bat	/^set cc_includes=\/I%src_dir% \/Ivendor$/;"	v
cc_obj	./build.bat	/^set cc_obj=%out_path%.obj$/;"	v
cc_opti	./build.bat	/^set cc_opti=\/Od \/Oi$/;"	v
cc_options	./build.bat	/^set cc_options=\/options:strict \/EHsc \/EHa- \/GS- \/GR- \/guard:cf- \/FC \/c \/Tc$/;"	v
cc_out	./build.bat	/^set cc_out=\/Fo:%cc_obj% %cc_pdb_out%$/;"	v
cc_pdb_out	./build.bat	/^set cc_pdb_out=\/Fd:%out_path%.pdb$/;"	v
cc_std	./build.bat	/^set cc_std=\/experimental:c11atomics \/std:clatest$/;"	v
cc_warn	./build.bat	/^set cc_warn=\/Wall \/WX \/wd4090 \/wd4189 \/wd5045 \/wd4101$/;"	v
cflr	./cm_error_handling.c	/^cflr(Str8 buffer, char* file, int line, char* fn_call, char* fn_ctx, int threadid)$/;"	f	typeref:typename:void	file:
chars_to_wchars	./cm_memory.c	/^chars_to_wchars(char* input)$/;"	f	typeref:typename:wchar_t *	file:
clang	./build.bat	/^if "%msvc%"=="1"    set clang=0 && echo [msvc compile]$/;"	v
clock_gettime	./chichi_timer.c	/^clock_gettime(struct timespec *spec)$/;"	f	typeref:typename:size_t
cmFile	./cm_io.c	/^typedef struct cmFile$/;"	s	file:
cmFile	./cm_io.c	/^} cmFile;$/;"	t	typeref:struct:cmFile	file:
cm_assert	./cm_macro_defs.c	/^    #define cm_assert(/;"	d	file:
cm_code_get_string	./cm_error_handling.c	/^cm_code_get_string(CM_CODE code)$/;"	f	typeref:typename:char *	file:
cm_error_init	./cm_error_handling.c	/^cm_error_init(char* s_fn, char* c_fn, int line, char* file, ErrorType type)$/;"	f	typeref:typename:ErrorCode	file:
cm_r	./cm_error_handling.c	/^    CM_CODE cm_r;$/;"	m	union:ErrorCode::__anonac2ecf30010a	typeref:typename:CM_CODE	file:
cmd_line_get_ansi	./cm_win32.c	/^cmd_line_get_ansi(int* argc, char*** argv)$/;"	f	typeref:typename:void	file:
code	./test.c	/^  CM_CODE code = file_exist_open_map_ro("test.c", &file);$/;"	v	typeref:typename:CM_CODE
console_pause	./cm_io.c	/^console_pause(void)$/;"	f	typeref:typename:bool
console_write	./cm_io.c	/^console_write(HANDLE h, void* str, uint32_t len)$/;"	f	typeref:typename:int64_t
countof	./cm_macro_defs.c	/^#define countof(/;"	d	file:
cstrchr	./cm_string.c	/^cstrchr(char* str, char c)$/;"	f	typeref:typename:char *
d3d12libs	./build.bat	/^set d3d12libs=d3dcompiler.lib D3D12.lib dxgi.lib dxguid.lib$/;"	v
debug	./build.bat	/^if "%release%"=="1" set debug=0 && echo [release mode]$/;"	v
debug	./build.bat	/^if not "%release%"=="1" set debug=1$/;"	v
debug_printf_c	./cm_string.c	/^debug_printf_c(char* fmt, ...)$/;"	f	typeref:typename:void	file:
directory_create_r	./cm_win32.c	/^directory_create_r(char* entire_path)$/;"	f	typeref:typename:bool	file:
directory_exist	./cm_win32.c	/^directory_exist(char* path)$/;"	f	typeref:typename:bool	file:
dump_file_content	./test.c	/^dump_file_content(cmFile file)$/;"	f	typeref:typename:void
e_micro_s	./chichi_timer.c	/^  e_micro_s	= 1000 * 1000,$/;"	e	enum:e_unit_t	file:
e_milli_s	./chichi_timer.c	/^  e_milli_s	= 1000,$/;"	e	enum:e_unit_t	file:
e_nano_s	./chichi_timer.c	/^  e_nano_s	= 1000 * 1000 * 1000,$/;"	e	enum:e_unit_t	file:
e_second	./chichi_timer.c	/^  e_second	= 1,$/;"	e	enum:e_unit_t	file:
e_unit_t	./chichi_timer.c	/^typedef enum e_unit_t$/;"	g	file:
e_unit_t	./chichi_timer.c	/^} e_unit_t;$/;"	t	typeref:enum:e_unit_t	file:
exit	./cm_macro_defs.c	/^    #define exit(/;"	d	file:
exit_show_error_msg_box	./cm_error_handling.c	/^exit_show_error_msg_box(char* str)$/;"	f	typeref:typename:void	file:
exp7	./chichi_timer.c	/^#define exp7 /;"	d	file:
exp9	./chichi_timer.c	/^#define exp9 /;"	d	file:
ext	./build.bat	/^set ext=.exe$/;"	v
fast_atoi	./cm_string.c	/^fast_atoi(char* str)$/;"	f	typeref:typename:int32_t
fast_atoi_n	./cm_string.c	/^fast_atoi_n(char* str, int32_t size)$/;"	f	typeref:typename:int32_t
file	./cm_io.c	/^  FILE*     file;$/;"	m	struct:cmFile	typeref:typename:FILE *	file:
file	./test.c	/^  cmFile file = {0};$/;"	v	typeref:typename:cmFile
file_close	./cm_io.c	/^file_close(cmFile* file)$/;"	f	typeref:typename:CM_CODE	file:
file_create	./cm_io.c	/^file_create(char* path, uint32_t access, uint32_t share, uint32_t c, cmFile* f)$/;"	f	typeref:typename:force_inline CM_CODE
file_exist_open_map_ro	./cm_io.c	/^file_exist_open_map_ro(char* path, cmFile* file)$/;"	f	typeref:typename:force_inline CM_CODE
file_exist_open_map_sized	./cm_io.c	/^file_exist_open_map_sized($/;"	f	typeref:typename:CM_CODE	file:
file_mapping_create	./cm_io.c	/^file_mapping_create(cmFile* file, uint32_t fl_protect, uint32_t mapping_max_size)$/;"	f	typeref:typename:force_inline CM_CODE
file_name	./cm_error_handling.c	/^  char*     file_name;$/;"	m	struct:ErrorCode	typeref:typename:char *	file:
file_open	./cm_io.c	/^file_open(char* path, uint32_t access, uint32_t share, cmFile* file)$/;"	f	typeref:typename:force_inline CM_CODE
file_size	./cm_io.c	/^  uint64_t  file_size;$/;"	m	struct:cmFile	typeref:typename:uint64_t	file:
force_inline	./cm_macro_defs.c	/^  #define force_inline /;"	d	file:
fprintf	./cm_string.c	/^fprintf(HANDLE h, char* fmt, ...)$/;"	f	typeref:typename:int	file:
ftoa	./cm_string.c	/^ftoa(float num, char *str, int afterpoint)$/;"	f	typeref:typename:char *	file:
g_cflr	./cm_error_handling.c	/^global  Str8  g_cflr = {.str = g_file_line_msg, .len = CFLR_LEN};$/;"	v	typeref:typename:global Str8
g_file_line_msg	./cm_error_handling.c	/^global  char  g_file_line_msg[CFLR_LEN];$/;"	v	typeref:typename:global char[]
g_freq	./chichi_timer.c	/^double g_freq = 0.0;$/;"	v	typeref:typename:double
g_hInstance	./cm_entry.h	/^      static HINSTANCE g_hInstance = HINST_THISCOMPONENT;$/;"	v	typeref:typename:HINSTANCE
g_start_time	./chichi_timer.c	/^__int64 g_start_time = 0;$/;"	v	typeref:typename:__int64
get_counter	./chichi_timer.c	/^get_counter(Unit_t unit)$/;"	f	typeref:typename:double
get_full_error_msg	./cm_error_handling.c	/^get_full_error_msg(char* str, DWORD err)$/;"	f	typeref:typename:char *	file:
get_last_error_str	./cm_error_handling.c	/^get_last_error_str(DWORD code)$/;"	f	typeref:typename:char *	file:
get_time_str	./chichi_timer.c	/^get_time_str(Unit_t unit)$/;"	f	typeref:typename:char *
global	./cm_macro_defs.c	/^#define global /;"	d	file:
h_file	./cm_io.c	/^  HANDLE    h_file;$/;"	m	struct:cmFile	typeref:typename:HANDLE	file:
h_map	./cm_io.c	/^  HANDLE    h_map;$/;"	m	struct:cmFile	typeref:typename:HANDLE	file:
handle_close	./cm_io.c	/^handle_close(HANDLE h)$/;"	f	typeref:typename:force_inline CM_CODE
handled	./cm_error_handling.c	/^  int       handled;$/;"	m	struct:ErrorCode	typeref:typename:int	file:
heap_alloc	./cm_memory.c	/^#define heap_alloc(/;"	d	file:
heap_alloc_dz	./cm_memory.c	/^#define heap_alloc_dz(/;"	d	file:
heap_create	./cm_memory.c	/^#define heap_create(/;"	d	file:
heap_destroy	./cm_memory.c	/^#define heap_destroy(/;"	d	file:
heap_free	./cm_memory.c	/^#define heap_free(/;"	d	file:
heap_free_dz	./cm_memory.c	/^#define heap_free_dz(/;"	d	file:
init_counter	./chichi_timer.c	/^init_counter(void)$/;"	f	typeref:typename:void
int_r	./cm_error_handling.c	/^    int     int_r;$/;"	m	union:ErrorCode::__anonac2ecf30010a	typeref:typename:int	file:
l_all	./build.bat	/^set l_all=%l_debug% %l_options% %libs% %l_delay% %l_opti%$/;"	v
l_arch	./build.bat	/^set l_arch=\/MACHINE:X64 \/STACK:0x100000,0x100000$/;"	v
l_debug	./build.bat	/^set l_debug=\/DEBUG:FULL \/PDB:%out_path%.pdb \/DYNAMICBASE:NO$/;"	v
l_delay	./build.bat	/^rem set l_delay=\/DELAYLOAD:d3d12.dll$/;"	v
l_files	./build.bat	/^set l_files=\/ILK:%out_path%.ilk \/MAP:%out_path%.map $/;"	v
l_opti	./build.bat	/^rem set l_opti=\/LTCGU$/;"	v
l_options	./build.bat	/^rem set l_options=\/WX %l_arch% \/NODEFAULTLIB %l_sys%$/;"	v
l_options	./build.bat	/^set l_options=\/WX %l_arch% %l_sys%$/;"	v
l_out	./build.bat	/^set l_out=\/OUT:%out_path%%ext%$/;"	v
l_sys	./build.bat	/^rem set l_sys=\/SUBSYSTEM:WINDOWS \/ENTRY:WinMainCRTStartup \/PROFILE \/GUARD:NO$/;"	v
len	./cm_string.c	/^  size_t  len;$/;"	m	struct:Str8	typeref:typename:size_t	file:
libs	./build.bat	/^set libs=shlwapi.lib Kernel32.lib User32.lib Gdi32.lib %asanlibs% %d3d12libs%$/;"	v
line	./cm_error_handling.c	/^  int       line;$/;"	m	struct:ErrorCode	typeref:typename:int	file:
linker	./build.bat	/^set linker=link \/nologo \/INCREMENTAL:NO$/;"	v
make_string	./cm_string.c	/^make_string(char* str)$/;"	f	typeref:typename:force_inline Str8
map	./cm_io.c	/^  void*     map;$/;"	m	struct:cmFile	typeref:typename:void *	file:
message_box	./cm_string.c	/^message_box(MU char* msg)$/;"	f	typeref:typename:int
message_box	./cm_string.c	/^message_box(char* msg)$/;"	f	typeref:typename:int
msvc	./build.bat	/^if "%clang%"=="1"   set msvc=0 && echo [clang compile]$/;"	v
msvc	./build.bat	/^if not "%msvc%"=="1" if not "%clang%"=="1" set msvc=1$/;"	v
offsetof	./cm_macro_defs.c	/^  #define offsetof(/;"	d	file:
out_path	./build.bat	/^set out_path=%bin%\\%program%$/;"	v
padding	./cm_error_handling.c	/^  int       padding;$/;"	m	struct:ErrorCode	typeref:typename:int	file:
page_commit	./cm_memory.c	/^page_commit(void* base, uint64_t size)$/;"	f	typeref:typename:bool	file:
page_decommit	./cm_memory.c	/^page_decommit(void* base, uint64_t size)$/;"	f	typeref:typename:bool	file:
page_large_reserve	./cm_memory.c	/^page_large_reserve(uint64_t size)$/;"	f	typeref:typename:void *	file:
page_release	./cm_memory.c	/^page_release(void* base, uint64_t size)$/;"	f	typeref:typename:bool	file:
page_reserve	./cm_memory.c	/^page_reserve(uint64_t size)$/;"	f	typeref:typename:void *	file:
path	./cm_io.c	/^  char*     path;$/;"	m	struct:cmFile	typeref:typename:char *	file:
path	./test.c	/^  char* path = "test.c";$/;"	v	typeref:typename:char *
print_string	./cm_string.c	/^print_string(Str8 string)$/;"	f	typeref:typename:int	file:
printf	./cm_string.c	/^printf(char* fmt, ...)$/;"	f	typeref:typename:int	file:
process_create	./cm_proc_threads.c	/^process_create(char* path, char* args)$/;"	f	typeref:typename:bool
process_is_running	./cm_proc_threads.c	/^process_is_running(char* process_name) $/;"	f	typeref:typename:bool
process_list_all	./cm_proc_threads.c	/^process_list_all(void)$/;"	f	typeref:typename:bool
program	./build.bat	/^set program=test$/;"	v
release	./build.bat	/^if "%debug%"=="1"   set release=0 && echo [debug mode]$/;"	v
report_all	./cm_error_handling.c	/^#define report_all(/;"	d	file:
report_box	./cm_error_handling.c	/^#define report_box(/;"	d	file:
report_console	./cm_error_handling.c	/^#define report_console(/;"	d	file:
reverse	./cm_string.c	/^reverse(char *str, int length)$/;"	f	typeref:typename:void	file:
show_error_msg_box	./cm_error_handling.c	/^show_error_msg_box(char* str, DWORD err)$/;"	f	typeref:typename:void	file:
show_error_msg_console	./cm_error_handling.c	/^show_error_msg_console(char* str, DWORD err)$/;"	f	typeref:typename:void	file:
show_includes	./build.bat	/^rem set show_includes=\/showIncludes$/;"	v
size	./cm_allocator.c	/^  size_t    size;$/;"	m	struct:Allocator	typeref:typename:size_t	file:
size	./cm_io.c	/^  uint64_t  size;$/;"	m	struct:Slice	typeref:typename:uint64_t	file:
src_dir	./build.bat	/^set src_dir=.$/;"	v
stack_fn_name	./cm_error_handling.c	/^  char*     stack_fn_name;$/;"	m	struct:ErrorCode	typeref:typename:char *	file:
str	./cm_string.c	/^  char*   str;$/;"	m	struct:Str8	typeref:typename:char *	file:
str_ncmp	./cm_string.c	/^#define str_ncmp(str, ...) str_ncmp_/;"	d	file:
str_ncmp_impl	./cm_string.c	/^str_ncmp_impl(char* src, ...)$/;"	f	typeref:typename:bool
string_len	./cm_string.c	/^string_len(Str8 str)$/;"	f	typeref:typename:force_inline size_t
thread_static	./cm_macro_defs.c	/^  #define thread_static /;"	d	file:
type	./cm_error_handling.c	/^  ErrorType type;$/;"	m	struct:ErrorCode	typeref:typename:ErrorType	file:
unit	./chichi_timer.c	/^typedef struct Unit_t	{e_unit_t unit;} Unit_t; $/;"	m	struct:Unit_t	typeref:typename:e_unit_t	file:
unix_time	./chichi_timer.c	/^unix_time(struct timespec *spec)$/;"	f	typeref:typename:void
view	./cm_io.c	/^  void*     view;$/;"	m	struct:Slice	typeref:typename:void *	file:
w2ux	./chichi_timer.c	/^#define w2ux /;"	d	file:
winbool_r	./cm_error_handling.c	/^    BOOL    winbool_r;$/;"	m	union:ErrorCode::__anonac2ecf30010a	typeref:typename:BOOL	file:
winh_r	./cm_error_handling.c	/^    HRESULT winh_r;$/;"	m	union:ErrorCode::__anonac2ecf30010a	typeref:typename:HRESULT	file:
winhandle_r	./cm_error_handling.c	/^    HANDLE  winhandle_r;$/;"	m	union:ErrorCode::__anonac2ecf30010a	typeref:typename:HANDLE	file:
write_file	./cm_string.c	/^write_file(HANDLE h, void* buffer, uint32_t length)$/;"	f	typeref:typename:int32_t
write_file	./cm_string.c	/^write_file(int fd, void* buffer, uint32_t length)$/;"	f	typeref:typename:int32_t
