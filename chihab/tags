!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	L,label	/goto labels/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	p,prototype	/function prototypes/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	C:/devel/chihab/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/e2308b07c/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
ASAN_ENABLED	./cm_macro_defs.c	/^    #define ASAN_ENABLED /;"	d	file:
AllocConsole	./test.c	/^  AllocConsole();$/;"	p	file:
Allocator	./cm_allocator.c	/^typedef struct Allocator$/;"	s	file:
Allocator	./cm_allocator.c	/^} Allocator;$/;"	t	typeref:struct:Allocator	file:
CFLR_LEN	./cm_error_handling.c	/^#define CFLR_LEN /;"	d	file:
CHECK_EXIT	./cm_error_handling.c	/^  #define CHECK_EXIT(/;"	d	file:
CM_ALLOCATOR_C	./cm_allocator.c	/^#define CM_ALLOCATOR_C$/;"	d	file:
CM_API_FAIL	./cm_error_handling.c	/^  CM_API_FAIL           = 1,$/;"	e	enum:CM_CODE	file:
CM_CODE	./cm_error_handling.c	/^typedef enum CM_CODE {$/;"	g	file:
CM_CODE	./cm_error_handling.c	/^} CM_CODE;$/;"	t	typeref:enum:CM_CODE	file:
CM_CODE_MAX	./cm_error_handling.c	/^  CM_CODE_MAX$/;"	e	enum:CM_CODE	file:
CM_DIR_OPEN_FAIL	./cm_error_handling.c	/^  CM_DIR_OPEN_FAIL      = 21,$/;"	e	enum:CM_CODE	file:
CM_ENTRY_H	./cm_entry.h	/^#define CM_ENTRY_H$/;"	d
CM_ERROR_HANDLING_C	./cm_error_handling.c	/^#define CM_ERROR_HANDLING_C$/;"	d	file:
CM_EVENTS_C	./cm_events.c	/^#define CM_EVENTS_C$/;"	d	file:
CM_FILE_MAP_FAIL	./cm_error_handling.c	/^  CM_FILE_MAP_FAIL      = 24,$/;"	e	enum:CM_CODE	file:
CM_FILE_MAP_TOO_SMALL	./cm_error_handling.c	/^  CM_FILE_MAP_TOO_SMALL = 25,$/;"	e	enum:CM_CODE	file:
CM_FILE_OPEN_FAIL	./cm_error_handling.c	/^  CM_FILE_OPEN_FAIL     = 20,$/;"	e	enum:CM_CODE	file:
CM_FONT_ERROR	./cm_error_handling.c	/^  CM_FONT_ERROR         = 30,$/;"	e	enum:CM_CODE	file:
CM_GENERIC_CONTAINERS_C	./cm_generic_containers.c	/^#define CM_GENERIC_CONTAINERS_C$/;"	d	file:
CM_GUID_H	./cm_guid.h	/^#define CM_GUID_H$/;"	d
CM_HEAP_ALLOC_FAIL	./cm_error_handling.c	/^  CM_HEAP_ALLOC_FAIL    = 51,$/;"	e	enum:CM_CODE	file:
CM_HEAP_CREATE_FAIL	./cm_error_handling.c	/^  CM_HEAP_CREATE_FAIL   = 50,$/;"	e	enum:CM_CODE	file:
CM_INVALID_DATA	./cm_error_handling.c	/^  CM_INVALID_DATA       = 10,$/;"	e	enum:CM_CODE	file:
CM_INVALID_SIZE	./cm_error_handling.c	/^  CM_INVALID_SIZE       = 7,$/;"	e	enum:CM_CODE	file:
CM_IO_C	./cm_io.c	/^#define CM_IO_C$/;"	d	file:
CM_MACRO_DEFS_H	./cm_macro_defs.c	/^#define CM_MACRO_DEFS_H$/;"	d	file:
CM_MEMORY_C	./cm_memory.c	/^#define CM_MEMORY_C$/;"	d	file:
CM_OK	./cm_error_handling.c	/^  CM_OK                 = 0,$/;"	e	enum:CM_CODE	file:
CM_OS_SET_H	./cm_os_set.h	/^#define CM_OS_SET_H$/;"	d
CM_OUT_ALL	./cm_error_handling.c	/^#define CM_OUT_ALL /;"	d	file:
CM_OUT_BOX	./cm_error_handling.c	/^#define CM_OUT_BOX /;"	d	file:
CM_OUT_CONSOLE	./cm_error_handling.c	/^#define CM_OUT_CONSOLE /;"	d	file:
CM_OUT_HANDLE	./cm_error_handling.c	/^#define CM_OUT_HANDLE /;"	d	file:
CM_OVERFLOW	./cm_error_handling.c	/^  CM_OVERFLOW           = 8,$/;"	e	enum:CM_CODE	file:
CM_SIZE_TOO_BIG	./cm_error_handling.c	/^  CM_SIZE_TOO_BIG       = 6,$/;"	e	enum:CM_CODE	file:
CM_STRING_C	./cm_string.c	/^#define CM_STRING_C$/;"	d	file:
CM_STRING_TYPES_H	./cm_string_types.h	/^#define CM_STRING_TYPES_H$/;"	d
CM_STRUCT	./cm_generic_containers.c	/^#define CM_STRUCT /;"	d	file:
CM_TIMER_C	./chichi_timer.c	/^#define CM_TIMER_C$/;"	d	file:
CM_TYPES_H	./cm_types.h	/^#define CM_TYPES_H$/;"	d
CM_VEC_TYPES_H	./cm_vec_types.h	/^#define CM_VEC_TYPES_H$/;"	d
CM_WIN32_C	./cm_win32.c	/^#define CM_WIN32_C$/;"	d	file:
CM_WINDOWS	./cm_os_set.h	/^    #define CM_WINDOWS /;"	d
CM_WINDOWS	./cm_os_set.h	/^  #define CM_WINDOWS /;"	d
COMPILER_CLANG	./cm_os_set.h	/^  #define COMPILER_CLANG /;"	d
COMPILER_GCC	./cm_os_set.h	/^  #define COMPILER_GCC /;"	d
COMPILER_MSVC	./cm_os_set.h	/^  #define COMPILER_MSVC /;"	d
COUNTOF	./cm_macro_defs.c	/^#define COUNTOF(/;"	d	file:
CPP_LANG	./cm_os_set.h	/^  #define CPP_LANG /;"	d
C_LANG	./cm_os_set.h	/^  #define C_LANG /;"	d
DO	./cm_macro_defs.c	/^#define DO /;"	d	file:
ENDIF	./cm_macro_defs.c	/^#define ENDIF /;"	d	file:
ENTRY	./cm_entry.h	/^      #define ENTRY /;"	d
ET_CM_CODE	./cm_error_handling.c	/^  ET_CM_CODE       = 0x5,$/;"	e	enum:ErrorType	file:
ET_D3D12	./cm_error_handling.c	/^  ET_D3D12         = 0x4,$/;"	e	enum:ErrorType	file:
ET_HRESULT	./cm_error_handling.c	/^  ET_HRESULT       = 0x0,$/;"	e	enum:ErrorType	file:
ET_INT	./cm_error_handling.c	/^  ET_INT           = 0x1,$/;"	e	enum:ErrorType	file:
ET_UNKNOWN	./cm_error_handling.c	/^  ET_UNKNOWN       = 0x6,$/;"	e	enum:ErrorType	file:
ET_WIN_BOOL	./cm_error_handling.c	/^  ET_WIN_BOOL      = 0x2,$/;"	e	enum:ErrorType	file:
ET_WIN_HANDLE	./cm_error_handling.c	/^  ET_WIN_HANDLE    = 0x3,$/;"	e	enum:ErrorType	file:
EXIT_FAIL	./cm_macro_defs.c	/^#define EXIT_FAIL()     exit(EXIT_FAILU/;"	d	file:
EXIT_FAILURE	./cm_macro_defs.c	/^  #define EXIT_FAILURE /;"	d	file:
EXIT_STR	./cm_error_handling.c	/^#define EXIT_STR /;"	d	file:
EXIT_SUCCEED	./cm_macro_defs.c	/^#define EXIT_SUCCEED(/;"	d	file:
EXIT_SUCCESS	./cm_macro_defs.c	/^  #define EXIT_SUCCESS /;"	d	file:
EXTERN_C	./cm_macro_defs.c	/^    #define EXTERN_C /;"	d	file:
ErrorCode	./cm_error_handling.c	/^typedef struct ErrorCode$/;"	s	file:
ErrorCode	./cm_error_handling.c	/^} ErrorCode;$/;"	t	typeref:struct:ErrorCode	file:
ErrorType	./cm_error_handling.c	/^typedef enum ErrorType$/;"	g	file:
ErrorType	./cm_error_handling.c	/^} ErrorType;$/;"	t	typeref:enum:ErrorType	file:
FT	./cm_macro_defs.c	/^#define FT /;"	d	file:
GB	./cm_macro_defs.c	/^#define GB(/;"	d	file:
HINST_THISCOMPONENT	./cm_entry.h	/^      #define HINST_THISCOMPONENT /;"	d
HR_IF	./cm_macro_defs.c	/^#define HR_IF(/;"	d	file:
IF	./cm_macro_defs.c	/^#define IF(/;"	d	file:
INFINITE_LOOP	./cm_macro_defs.c	/^#define INFINITE_LOOP /;"	d	file:
KB	./cm_macro_defs.c	/^#define KB(/;"	d	file:
MAX_ERROR_TYPE	./cm_error_handling.c	/^  MAX_ERROR_TYPE$/;"	e	enum:ErrorType	file:
MB	./cm_macro_defs.c	/^#define MB(/;"	d	file:
MICRO_S	./chichi_timer.c	/^#define MICRO_S	/;"	d	file:
MILLI_S	./chichi_timer.c	/^#define MILLI_S	/;"	d	file:
MU	./cm_macro_defs.c	/^#define MU /;"	d	file:
NANO_S	./chichi_timer.c	/^#define NANO_S	/;"	d	file:
ND	./cm_macro_defs.c	/^#define ND /;"	d	file:
NOGDI	./cm_macro_defs.c	/^  #define NOGDI$/;"	d	file:
NOIME	./cm_macro_defs.c	/^  #define NOIME$/;"	d	file:
NOMCX	./cm_macro_defs.c	/^  #define NOMCX$/;"	d	file:
NONLS	./cm_macro_defs.c	/^  #define NONLS$/;"	d	file:
NOPROFILER	./cm_macro_defs.c	/^  #define NOPROFILER$/;"	d	file:
NOSERVICE	./cm_macro_defs.c	/^  #define NOSERVICE$/;"	d	file:
NO_ASAN	./cm_macro_defs.c	/^    #define NO_ASAN /;"	d	file:
NO_CRT_LINKED	./test.c	/^#define NO_CRT_LINKED$/;"	d	file:
OFFSETOF	./cm_macro_defs.c	/^#define OFFSETOF(/;"	d	file:
OS_LINUX	./cm_os_set.h	/^    #define OS_LINUX /;"	d
OS_LINUX	./cm_os_set.h	/^  #define OS_LINUX /;"	d
OS_MAC	./cm_os_set.h	/^    #define OS_MAC /;"	d
OS_MAC	./cm_os_set.h	/^  #define OS_MAC /;"	d
PRINT_BUFFER_SIZE	./cm_string.c	/^#define PRINT_BUFFER_SIZE /;"	d	file:
PROC_THREADS_C	./cm_proc_threads.c	/^#define PROC_THREADS_C$/;"	d	file:
R	./cm_error_handling.c	/^#define R(/;"	d	file:
R	./test.c	/^  R(r, ET_WIN_BOOL);$/;"	p	file:
RETURN_FROM_MAIN	./cm_entry.h	/^  #define RETURN_FROM_MAIN(/;"	d
RETURN_FROM_MAIN	./test.c	/^    RETURN_FROM_MAIN(EXIT_FAILURE);$/;"	p	file:
RETURN_FROM_MAIN	./test.c	/^  RETURN_FROM_MAIN(EXIT_SUCCESS);$/;"	p	file:
Recf32	./cm_vec_types.h	/^typedef union Recf32 Recf32;$/;"	t	typeref:union:Recf32
Recf32	./cm_vec_types.h	/^union Recf32 { struct {f32 x, y, w, h;}; f32 v[4]; };$/;"	u
Recf64	./cm_vec_types.h	/^typedef union Recf64 Recf64;$/;"	t	typeref:union:Recf64
Recf64	./cm_vec_types.h	/^union Recf64 { struct {f64 x, y, w, h;}; f64 v[4]; };$/;"	u
Reci16	./cm_vec_types.h	/^typedef union Reci16 Reci16;$/;"	t	typeref:union:Reci16
Reci16	./cm_vec_types.h	/^union Reci16 { struct {i16 x, y, w, h;}; i16 v[4]; };$/;"	u
Reci32	./cm_vec_types.h	/^typedef union Reci32 Reci32;$/;"	t	typeref:union:Reci32
Reci32	./cm_vec_types.h	/^union Reci32 { struct {i32 x, y, w, h;}; i32 v[4]; };$/;"	u
Reci64	./cm_vec_types.h	/^typedef union Reci64 Reci64;$/;"	t	typeref:union:Reci64
Reci64	./cm_vec_types.h	/^union Reci64 { struct {i64 x, y, w, h;}; i64 v[4]; };$/;"	u
Reci8	./cm_vec_types.h	/^typedef union Reci8 Reci8;$/;"	t	typeref:union:Reci8
Reci8	./cm_vec_types.h	/^union Reci8 { struct {i8 x, y, w, h;}; i8 v[4]; };$/;"	u
S32	./cm_string_types.h	/^struct S32 { u32  *str; u64 len; };$/;"	s
S32	./cm_string_types.h	/^typedef struct S32 S32;$/;"	t	typeref:struct:S32
S64	./cm_string_types.h	/^struct S64 { u64  *str; u64 len; };$/;"	s
S64	./cm_string_types.h	/^typedef struct S64 S64;$/;"	t	typeref:struct:S64
S8	./cm_string_types.h	/^struct S8 { char  *str; u64 len; };$/;"	s
S8	./cm_string_types.h	/^typedef struct S8 S8;$/;"	t	typeref:struct:S8
SECOND	./chichi_timer.c	/^#define SECOND	/;"	d	file:
STDERROR	./cm_macro_defs.c	/^  #define STDERROR(/;"	d	file:
STDINPUT	./cm_macro_defs.c	/^  #define STDINPUT(/;"	d	file:
STDOUT	./cm_macro_defs.c	/^  #define STDOUT(/;"	d	file:
STR_FMT	./cm_macro_defs.c	/^#define STR_FMT /;"	d	file:
SUB_CONSOLE	./test.c	/^#define SUB_CONSOLE$/;"	d	file:
Slice	./cm_io.c	/^typedef struct Slice$/;"	s	file:
Slice	./cm_io.c	/^}Slice;$/;"	t	typeref:struct:Slice	file:
TB	./cm_macro_defs.c	/^#define TB(/;"	d	file:
Trap	./cm_macro_defs.c	/^  #define Trap(/;"	d	file:
UnicodeDecode	./cm_string_types.h	/^struct UnicodeDecode { u32 inc; u32 codepoint; };$/;"	s
UnicodeDecode	./cm_string_types.h	/^typedef struct UnicodeDecode UnicodeDecode;$/;"	t	typeref:struct:UnicodeDecode
Unit_t	./chichi_timer.c	/^typedef struct Unit_t	{e_unit_t unit;} Unit_t; $/;"	s	file:
Unit_t	./chichi_timer.c	/^typedef struct Unit_t	{e_unit_t unit;} Unit_t; $/;"	t	typeref:struct:Unit_t	file:
V_ADD_FN	./cm_generic_containers.c	/^#define V_ADD_FN(/;"	d	file:
V_FULL	./cm_generic_containers.c	/^#define V_FULL(/;"	d	file:
V_FULL	./cm_generic_containers.c	/^V_FULL(i32)$/;"	p	typeref:typename:i16	file:
V_FULL	./cm_generic_containers.c	/^V_FULL(i8);$/;"	p	file:
V_FULL	./cm_generic_containers.c	/^V_FULL(u32)$/;"	p	typeref:typename:u16	file:
V_INIT_FN	./cm_generic_containers.c	/^#define V_INIT_FN(/;"	d	file:
V_RELEASE_FN	./cm_generic_containers.c	/^#define V_RELEASE_FN(/;"	d	file:
V_STRUCT	./cm_generic_containers.c	/^#define V_STRUCT(/;"	d	file:
Vec2f32	./cm_vec_types.h	/^typedef union Vec2f32 Vec2f32;$/;"	t	typeref:union:Vec2f32
Vec2f32	./cm_vec_types.h	/^union Vec2f32 { struct { f32 x, y; }; f32 v[2]; };$/;"	u
Vec2f64	./cm_vec_types.h	/^typedef union Vec2f64 Vec2f64;$/;"	t	typeref:union:Vec2f64
Vec2f64	./cm_vec_types.h	/^union Vec2f64 { struct { f64 x, y; }; f64 v[2]; };$/;"	u
Vec2i16	./cm_vec_types.h	/^typedef union Vec2i16 Vec2i16;$/;"	t	typeref:union:Vec2i16
Vec2i16	./cm_vec_types.h	/^union Vec2i16 { struct { i16 x, y; }; i16 v[2]; };$/;"	u
Vec2i32	./cm_vec_types.h	/^typedef union Vec2i32 Vec2i32;$/;"	t	typeref:union:Vec2i32
Vec2i32	./cm_vec_types.h	/^union Vec2i32 { struct { i32 x, y; }; i32 v[2]; };$/;"	u
Vec2i64	./cm_vec_types.h	/^typedef union Vec2i64 Vec2i64;$/;"	t	typeref:union:Vec2i64
Vec2i64	./cm_vec_types.h	/^union Vec2i64 { struct { i64 x, y; }; i64 v[2]; };$/;"	u
Vec2i8	./cm_vec_types.h	/^typedef union Vec2i8 Vec2i8;$/;"	t	typeref:union:Vec2i8
Vec2i8	./cm_vec_types.h	/^union Vec2i8 { struct { i8 x, y; }; i8 v[2]; };$/;"	u
Vec3f32	./cm_vec_types.h	/^typedef union Vec3f32 Vec3f32;$/;"	t	typeref:union:Vec3f32
Vec3f32	./cm_vec_types.h	/^union Vec3f32 { struct { f32 x, y, z; }; f32 v[3]; };$/;"	u
Vec3f64	./cm_vec_types.h	/^typedef union Vec3f64 Vec3f64;$/;"	t	typeref:union:Vec3f64
Vec3f64	./cm_vec_types.h	/^union Vec3f64 { struct { f64 x, y, z; }; f64 v[3]; };$/;"	u
Vec3i16	./cm_vec_types.h	/^typedef union Vec3i16 Vec3i16;$/;"	t	typeref:union:Vec3i16
Vec3i16	./cm_vec_types.h	/^union Vec3i16 { struct { i16 x, y, z; }; i16 v[3]; };$/;"	u
Vec3i32	./cm_vec_types.h	/^typedef union Vec3i32 Vec3i32;$/;"	t	typeref:union:Vec3i32
Vec3i32	./cm_vec_types.h	/^union Vec3i32 { struct { i32 x, y, z; }; i32 v[3]; };$/;"	u
Vec3i64	./cm_vec_types.h	/^typedef union Vec3i64 Vec3i64;$/;"	t	typeref:union:Vec3i64
Vec3i64	./cm_vec_types.h	/^union Vec3i64 { struct { i64 x, y, z; }; i64 v[3]; };$/;"	u
Vec3i8	./cm_vec_types.h	/^typedef union Vec3i8 Vec3i8;$/;"	t	typeref:union:Vec3i8
Vec3i8	./cm_vec_types.h	/^union Vec3i8 { struct { i8 x, y, z; }; i8 v[3]; };$/;"	u
Vec4f32	./cm_vec_types.h	/^typedef union Vec4f32 Vec4f32;$/;"	t	typeref:union:Vec4f32
Vec4f32	./cm_vec_types.h	/^union Vec4f32 { struct { f32 w, x, y, z; }; f32 v[4]; };$/;"	u
Vec4f64	./cm_vec_types.h	/^typedef union Vec4f64 Vec4f64;$/;"	t	typeref:union:Vec4f64
Vec4f64	./cm_vec_types.h	/^union Vec4f64 { struct { f64 w, x, y, z; }; f64 v[4]; };$/;"	u
Vec4i16	./cm_vec_types.h	/^typedef union Vec4i16 Vec4i16;$/;"	t	typeref:union:Vec4i16
Vec4i16	./cm_vec_types.h	/^union Vec4i16 { struct { i16 w, x, y, z; }; i16 v[4]; };$/;"	u
Vec4i32	./cm_vec_types.h	/^typedef union Vec4i32 Vec4i32;$/;"	t	typeref:union:Vec4i32
Vec4i32	./cm_vec_types.h	/^union Vec4i32 { struct { i32 w, x, y, z; }; i32 v[4]; };$/;"	u
Vec4i64	./cm_vec_types.h	/^typedef union Vec4i64 Vec4i64;$/;"	t	typeref:union:Vec4i64
Vec4i64	./cm_vec_types.h	/^union Vec4i64 { struct { i64 w, x, y, z; }; i64 v[4]; };$/;"	u
Vec4i8	./cm_vec_types.h	/^typedef union Vec4i8 Vec4i8;$/;"	t	typeref:union:Vec4i8
Vec4i8	./cm_vec_types.h	/^union Vec4i8 { struct { i8 w, x, y, z; }; i8 v[4]; };$/;"	u
WHILE	./cm_macro_defs.c	/^#define WHILE /;"	d	file:
WIN32_LEAN_AND_MEAN	./cm_macro_defs.c	/^  #define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_NO_BS	./cm_proc_threads.c	/^#define WIN32_NO_BS$/;"	d	file:
WIN32_NO_BS	./test.c	/^#define WIN32_NO_BS$/;"	d	file:
_BITMASK1	./cm_types.h	/^#define _BITMASK1 /;"	d
_BITMASK2	./cm_types.h	/^#define _BITMASK2 /;"	d
_BITMASK3	./cm_types.h	/^#define _BITMASK3 /;"	d
_BITMASK4	./cm_types.h	/^#define _BITMASK4 /;"	d
_BITMASK5	./cm_types.h	/^#define _BITMASK5 /;"	d
_BITMASK6	./cm_types.h	/^#define _BITMASK6 /;"	d
_CRT_CONCATENATE	./cm_macro_defs.c	/^  #define _CRT_CONCATENATE(a, b)    _CRT_CONCATENATE_/;"	d	file:
_CRT_CONCATENATE_	./cm_macro_defs.c	/^  #define _CRT_CONCATENATE_(/;"	d	file:
_CRT_SECURE_NO_WARNINGS	./cm_macro_defs.c	/^  #define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_CRT_STRINGIZE	./cm_macro_defs.c	/^  #define _CRT_STRINGIZE(x)         _CRT_STRINGIZE_/;"	d	file:
_CRT_STRINGIZE_	./cm_macro_defs.c	/^  #define _CRT_STRINGIZE_(/;"	d	file:
_CRT_UNPARENTHESIZE	./cm_macro_defs.c	/^  #define _CRT_UNPARENTHESIZE(...)  _CRT_UNPARENTHESIZE_/;"	d	file:
_CRT_UNPARENTHESIZE_	./cm_macro_defs.c	/^  #define _CRT_UNPARENTHESIZE_(/;"	d	file:
_CRT_WIDE	./cm_macro_defs.c	/^  #define _CRT_WIDE(s)              _CRT_WIDE_/;"	d	file:
_CRT_WIDE_	./cm_macro_defs.c	/^  #define _CRT_WIDE_(/;"	d	file:
_VADD	./cm_generic_containers.c	/^#define _VADD\\/;"	d	file:
_VINIT	./cm_generic_containers.c	/^#define _VINIT\\/;"	d	file:
_VRELEASE	./cm_generic_containers.c	/^#define _VRELEASE\\/;"	d	file:
__ImageBase	./cm_entry.h	/^      EXTERN_C IMAGE_DOS_HEADER __ImageBase;$/;"	v	typeref:typename:EXTERN_C IMAGE_DOS_HEADER
__anon964eb6b90108	./cm_vec_types.h	/^union Vec2i8 { struct { i8 x, y; }; i8 v[2]; };$/;"	s	union:Vec2i8
__anon964eb6b90208	./cm_vec_types.h	/^union Vec3i8 { struct { i8 x, y, z; }; i8 v[3]; };$/;"	s	union:Vec3i8
__anon964eb6b90308	./cm_vec_types.h	/^union Vec4i8 { struct { i8 w, x, y, z; }; i8 v[4]; };$/;"	s	union:Vec4i8
__anon964eb6b90408	./cm_vec_types.h	/^union Reci8 { struct {i8 x, y, w, h;}; i8 v[4]; };$/;"	s	union:Reci8
__anon964eb6b90508	./cm_vec_types.h	/^union Vec2i16 { struct { i16 x, y; }; i16 v[2]; };$/;"	s	union:Vec2i16
__anon964eb6b90608	./cm_vec_types.h	/^union Vec3i16 { struct { i16 x, y, z; }; i16 v[3]; };$/;"	s	union:Vec3i16
__anon964eb6b90708	./cm_vec_types.h	/^union Vec4i16 { struct { i16 w, x, y, z; }; i16 v[4]; };$/;"	s	union:Vec4i16
__anon964eb6b90808	./cm_vec_types.h	/^union Reci16 { struct {i16 x, y, w, h;}; i16 v[4]; };$/;"	s	union:Reci16
__anon964eb6b90908	./cm_vec_types.h	/^union Vec2i32 { struct { i32 x, y; }; i32 v[2]; };$/;"	s	union:Vec2i32
__anon964eb6b90a08	./cm_vec_types.h	/^union Vec3i32 { struct { i32 x, y, z; }; i32 v[3]; };$/;"	s	union:Vec3i32
__anon964eb6b90b08	./cm_vec_types.h	/^union Vec4i32 { struct { i32 w, x, y, z; }; i32 v[4]; };$/;"	s	union:Vec4i32
__anon964eb6b90c08	./cm_vec_types.h	/^union Reci32 { struct {i32 x, y, w, h;}; i32 v[4]; };$/;"	s	union:Reci32
__anon964eb6b90d08	./cm_vec_types.h	/^union Vec2i64 { struct { i64 x, y; }; i64 v[2]; };$/;"	s	union:Vec2i64
__anon964eb6b90e08	./cm_vec_types.h	/^union Vec3i64 { struct { i64 x, y, z; }; i64 v[3]; };$/;"	s	union:Vec3i64
__anon964eb6b90f08	./cm_vec_types.h	/^union Vec4i64 { struct { i64 w, x, y, z; }; i64 v[4]; };$/;"	s	union:Vec4i64
__anon964eb6b91008	./cm_vec_types.h	/^union Reci64 { struct {i64 x, y, w, h;}; i64 v[4]; };$/;"	s	union:Reci64
__anon964eb6b91108	./cm_vec_types.h	/^union Vec2f32 { struct { f32 x, y; }; f32 v[2]; };$/;"	s	union:Vec2f32
__anon964eb6b91208	./cm_vec_types.h	/^union Vec3f32 { struct { f32 x, y, z; }; f32 v[3]; };$/;"	s	union:Vec3f32
__anon964eb6b91308	./cm_vec_types.h	/^union Vec4f32 { struct { f32 w, x, y, z; }; f32 v[4]; };$/;"	s	union:Vec4f32
__anon964eb6b91408	./cm_vec_types.h	/^union Recf32 { struct {f32 x, y, w, h;}; f32 v[4]; };$/;"	s	union:Recf32
__anon964eb6b91508	./cm_vec_types.h	/^union Vec2f64 { struct { f64 x, y; }; f64 v[2]; };$/;"	s	union:Vec2f64
__anon964eb6b91608	./cm_vec_types.h	/^union Vec3f64 { struct { f64 x, y, z; }; f64 v[3]; };$/;"	s	union:Vec3f64
__anon964eb6b91708	./cm_vec_types.h	/^union Vec4f64 { struct { f64 w, x, y, z; }; f64 v[4]; };$/;"	s	union:Vec4f64
__anon964eb6b91808	./cm_vec_types.h	/^union Recf64 { struct {f64 x, y, w, h;}; f64 v[4]; };$/;"	s	union:Recf64
__anonac2ecf30010a	./cm_error_handling.c	/^  union {$/;"	u	struct:ErrorCode	file:
_fltused	./cm_macro_defs.c	/^    EXTERN_C int _fltused             = 0;$/;"	v	typeref:typename:EXTERN_C int
_i16max	./cm_types.h	/^#define _i16max /;"	d
_i32max	./cm_types.h	/^#define _i32max /;"	d
_i64max	./cm_types.h	/^#define _i64max /;"	d
_i8max	./cm_types.h	/^#define _i8max /;"	d
_imax	./cm_types.h	/^#define _imax /;"	d
_u16max	./cm_types.h	/^#define _u16max /;"	d
_u32max	./cm_types.h	/^#define _u32max /;"	d
_u64max	./cm_types.h	/^#define _u64max /;"	d
_u8max	./cm_types.h	/^#define _u8max /;"	d
_umax	./cm_types.h	/^#define _umax /;"	d
allocator_create	./cm_allocator.c	/^allocator_create(MU size_t size)$/;"	f	typeref:typename:Allocator
assert	./cm_macro_defs.c	/^    #define assert(/;"	d	file:
atoi	./cm_string.c	/^#define atoi(str) fast_atoi_/;"	d	file:
atomic	./cm_macro_defs.c	/^#define atomic /;"	d	file:
box_debug	./cm_error_handling.c	/^#define box_debug(/;"	d	file:
buflen_until_int	./cm_string.c	/^buflen_until_int(void* buf, i32 c)$/;"	f	typeref:typename:i32	file:
buflen_until_int_n	./cm_string.c	/^buflen_until_int_n(void* buf, i32 c, i32 size)$/;"	f	typeref:typename:i32	file:
c_strlen	./cm_string.c	/^c_strlen(char* str)$/;"	f	typeref:typename:size_t	file:
chars_to_wchars	./cm_memory.c	/^chars_to_wchars(char* input)$/;"	f	typeref:typename:wchar_t *	file:
clock_gettime	./chichi_timer.c	/^clock_gettime(struct timespec *spec)$/;"	f	typeref:typename:size_t
clock_gettime	./chichi_timer.c	/^size_t clock_gettime(struct timespec *spec);$/;"	p	typeref:typename:size_t	file:
cmFile	./cm_io.c	/^typedef struct cmFile$/;"	s	file:
cmFile	./cm_io.c	/^} cmFile;$/;"	t	typeref:struct:cmFile	file:
cmWindow	./cm_events.c	/^typedef struct cmWindow$/;"	s	file:
cmWindow	./cm_events.c	/^} cmWindow;$/;"	t	typeref:struct:cmWindow	file:
cm_assert	./cm_macro_defs.c	/^    #define cm_assert(/;"	d	file:
cm_code_get_string	./cm_error_handling.c	/^cm_code_get_string(CM_CODE code)$/;"	f	typeref:typename:char *	file:
cm_error_init	./cm_error_handling.c	/^cm_error_init(char* s_fn, char* c_fn, int line, char* file, ErrorType type)$/;"	f	typeref:typename:ErrorCode	file:
cm_itoa	./cm_string.c	/^cm_itoa(i64 nb, char* buffer, u32 buf_size)$/;"	f	typeref:typename:void	file:
cmd_line_get_ansi	./cm_win32.c	/^cmd_line_get_ansi(int* argc, char*** argv)$/;"	f	typeref:typename:void	file:
code	./test.c	/^  CM_CODE code = file_exist_open_map_ro("test.c", &file);$/;"	v	typeref:typename:CM_CODE
console_debug	./cm_error_handling.c	/^#define console_debug(/;"	d	file:
console_debug_v	./cm_error_handling.c	/^#define console_debug_v(/;"	d	file:
console_pause	./cm_io.c	/^console_pause(void)$/;"	f	typeref:typename:bool
console_pause	./test.c	/^  console_pause();$/;"	p	file:
console_write	./cm_io.c	/^console_write(HANDLE h, void* str, u32 len)$/;"	f	typeref:typename:int64_t
countof	./cm_macro_defs.c	/^#define countof(/;"	d	file:
cstrchr	./cm_string.c	/^cstrchr(char* str, char c)$/;"	f	typeref:typename:char *
cwd_get	./cm_win32.c	/^cwd_get(char* buffer, uint32_t size)$/;"	f	typeref:typename:uint32_t
cwd_set	./cm_win32.c	/^cwd_set(char* path)$/;"	f	typeref:typename:bool
debug_info_gather	./cm_error_handling.c	/^debug_info_gather(S8 buffer, char* lvl, char* file, int line, char* fn_call, char* fn_ctx)$/;"	f	typeref:typename:void	file:
debug_printf_c	./cm_string.c	/^debug_printf_c(char* fmt, ...)$/;"	f	typeref:typename:void	file:
directory_create_rf	./cm_win32.c	/^directory_create_rf(char* entire_path)$/;"	f	typeref:typename:bool	file:
directory_exist	./cm_win32.c	/^directory_exist(char* path)$/;"	f	typeref:typename:bool	file:
dump_file_content	./test.c	/^    dump_file_content(file);$/;"	p	file:
dump_file_content	./test.c	/^dump_file_content(cmFile file)$/;"	f	typeref:typename:void
e_micro_s	./chichi_timer.c	/^  e_micro_s	= 1000 * 1000,$/;"	e	enum:e_unit_t	file:
e_milli_s	./chichi_timer.c	/^  e_milli_s	= 1000,$/;"	e	enum:e_unit_t	file:
e_nano_s	./chichi_timer.c	/^  e_nano_s	= 1000 * 1000 * 1000,$/;"	e	enum:e_unit_t	file:
e_second	./chichi_timer.c	/^  e_second	= 1,$/;"	e	enum:e_unit_t	file:
e_unit_t	./chichi_timer.c	/^typedef enum e_unit_t$/;"	g	file:
e_unit_t	./chichi_timer.c	/^} e_unit_t;$/;"	t	typeref:enum:e_unit_t	file:
environment_get	./cm_win32.c	/^environment_get(void)$/;"	f	typeref:typename:char *
event_dispatch	./cm_events.c	/^event_dispatch(fn_event fn, void* args, bool *value)$/;"	f	typeref:typename:bool	file:
exit	./cm_macro_defs.c	/^    #define exit(/;"	d	file:
exp7	./chichi_timer.c	/^#define exp7 /;"	d	file:
exp9	./chichi_timer.c	/^#define exp9 /;"	d	file:
f32	./cm_types.h	/^typedef float               f32;$/;"	t	typeref:typename:float
f64	./cm_types.h	/^typedef double              f64;$/;"	t	typeref:typename:double
fail	./cm_macro_defs.c	/^#define fail /;"	d	file:
fast_atoi	./cm_string.c	/^fast_atoi(char* str)$/;"	f	typeref:typename:i32	file:
fast_atoi_n	./cm_string.c	/^fast_atoi_n(char* str, i32 size)$/;"	f	typeref:typename:i32	file:
file	./test.c	/^  cmFile file = {0};$/;"	v	typeref:typename:cmFile
file_close	./cm_io.c	/^file_close(cmFile* file)$/;"	f	typeref:typename:CM_CODE	file:
file_create	./cm_io.c	/^file_create(char* path, u32 access, u32 share, u32 c, cmFile* f)$/;"	f	typeref:typename:force_inline CM_CODE
file_exist_open_map_ro	./cm_io.c	/^file_exist_open_map_ro(char* path, cmFile* file)$/;"	f	typeref:typename:force_inline CM_CODE
file_exist_open_map_sized	./cm_io.c	/^file_exist_open_map_sized($/;"	f	typeref:typename:CM_CODE	file:
file_mapping_create	./cm_io.c	/^file_mapping_create(cmFile* file, u32 fl_protect, u32 mapping_max_size)$/;"	f	typeref:typename:force_inline CM_CODE
file_open	./cm_io.c	/^file_open(char* path, u32 access, u32 share, cmFile* file)$/;"	f	typeref:typename:force_inline CM_CODE
fn_event	./cm_events.c	/^typedef bool (* fn_event)(void*, MSG);$/;"	t	typeref:typename:bool (*)(void *,MSG)	file:
force_inline	./cm_macro_defs.c	/^  #define force_inline /;"	d	file:
fprintf	./cm_string.c	/^fprintf(HANDLE h, char* fmt, ...)$/;"	f	typeref:typename:i64	file:
ftoa	./cm_string.c	/^ftoa(f32 num, char *str, i32 afterpoint)$/;"	f	typeref:typename:char *	file:
g_debug_info	./cm_error_handling.c	/^global  S8    g_debug_info = {.str = g_file_line_msg, .len = CFLR_LEN};$/;"	v	typeref:typename:global S8
g_file_line_msg	./cm_error_handling.c	/^global  char  g_file_line_msg[CFLR_LEN];$/;"	v	typeref:typename:global char[]
g_freq	./chichi_timer.c	/^double g_freq = 0.0;$/;"	v	typeref:typename:double
g_hInstance	./cm_entry.h	/^      static HINSTANCE g_hInstance = HINST_THISCOMPONENT;$/;"	v	typeref:typename:HINSTANCE
g_start_time	./chichi_timer.c	/^__int64 g_start_time = 0;$/;"	v	typeref:typename:__int64
generic_vadd	./cm_generic_containers.c	/^generic_vadd(MU void* t, MU void* x)$/;"	f	typeref:typename:bool
generic_vinit	./cm_generic_containers.c	/^generic_vinit(MU void* t, MU void* x)$/;"	f	typeref:typename:bool
generic_vrelease	./cm_generic_containers.c	/^generic_vrelease(MU void* t)$/;"	f	typeref:typename:bool
get_counter	./chichi_timer.c	/^get_counter(Unit_t unit)$/;"	f	typeref:typename:double
get_full_error_msg	./cm_error_handling.c	/^get_full_error_msg(char* str, DWORD err)$/;"	f	typeref:typename:char *	file:
get_last_error_str	./cm_error_handling.c	/^get_last_error_str(DWORD code)$/;"	f	typeref:typename:char *	file:
get_time_str	./chichi_timer.c	/^get_time_str(Unit_t unit)$/;"	f	typeref:typename:char *
global	./cm_macro_defs.c	/^#define global /;"	d	file:
handle_close	./cm_io.c	/^handle_close(HANDLE h)$/;"	f	typeref:typename:force_inline CM_CODE
heap_alloc	./cm_memory.c	/^#define heap_alloc(/;"	d	file:
heap_alloc_dz	./cm_memory.c	/^#define heap_alloc_dz(/;"	d	file:
heap_create	./cm_memory.c	/^#define heap_create(/;"	d	file:
heap_destroy	./cm_memory.c	/^#define heap_destroy(/;"	d	file:
heap_free	./cm_memory.c	/^#define heap_free(/;"	d	file:
heap_free_dz	./cm_memory.c	/^#define heap_free_dz(/;"	d	file:
i16	./cm_types.h	/^typedef short               i16;$/;"	t	typeref:typename:short
i32	./cm_types.h	/^typedef int                 i32;$/;"	t	typeref:typename:int
i64	./cm_types.h	/^typedef long long           i64;$/;"	t	typeref:typename:long long
i8	./cm_types.h	/^typedef signed char         i8;$/;"	t	typeref:typename:signed char
init_counter	./chichi_timer.c	/^init_counter(void)$/;"	f	typeref:typename:void
log_debug	./cm_error_handling.c	/^log_debug(int output, char* buffer, ...)$/;"	f	typeref:typename:void	file:
log_debug_v	./cm_error_handling.c	/^log_debug_v(int output, char *buffer, char *fmt, ...)$/;"	f	typeref:typename:void	file:
log_thread	./cm_proc_threads.c	/^log_thread(DWORD dw)$/;"	f	typeref:typename:void
make_string	./cm_string.c	/^make_string(char* str)$/;"	f	typeref:typename:force_inline S8
message_box	./cm_string.c	/^message_box(MU char* msg)$/;"	f	typeref:typename:i32
message_box	./cm_string.c	/^message_box(char* msg)$/;"	f	typeref:typename:i32
offsetof	./cm_macro_defs.c	/^  #define offsetof(/;"	d	file:
page_commit	./cm_memory.c	/^page_commit(void* base, uint64_t size)$/;"	f	typeref:typename:bool	file:
page_decommit	./cm_memory.c	/^page_decommit(void* base, uint64_t size)$/;"	f	typeref:typename:bool	file:
page_large_reserve	./cm_memory.c	/^page_large_reserve(uint64_t size)$/;"	f	typeref:typename:void *	file:
page_release	./cm_memory.c	/^page_release(void* base, uint64_t size)$/;"	f	typeref:typename:bool	file:
page_reserve	./cm_memory.c	/^page_reserve(uint64_t size)$/;"	f	typeref:typename:void *	file:
path	./test.c	/^  char* path = "test.c";$/;"	v	typeref:typename:char *
print_string	./cm_string.c	/^print_string(S8 string)$/;"	f	typeref:typename:i64	file:
printf	./cm_string.c	/^printf(char* fmt, ...)$/;"	f	typeref:typename:i64	file:
process_create	./cm_proc_threads.c	/^process_create(char* path, char* args, bool wait, u32 *process_code)$/;"	f	typeref:typename:bool
process_is_running	./cm_proc_threads.c	/^process_is_running(char* process_name) $/;"	f	typeref:typename:bool
process_list_all	./cm_proc_threads.c	/^process_list_all(void)$/;"	f	typeref:typename:bool
read_only	./cm_macro_defs.c	/^  #define read_only /;"	d	file:
read_only	./cm_macro_defs.c	/^# define read_only$/;"	d	file:
report_all	./cm_error_handling.c	/^#define report_all(/;"	d	file:
report_box	./cm_error_handling.c	/^#define report_box(/;"	d	file:
report_console	./cm_error_handling.c	/^#define report_console(/;"	d	file:
report_error	./cm_error_handling.c	/^#define report_error(/;"	d	file:
report_error_box	./cm_error_handling.c	/^#define report_error_box(/;"	d	file:
report_error_go	./cm_error_handling.c	/^#define report_error_go(/;"	d	file:
reverse	./cm_string.c	/^reverse(char *str, i32 length)$/;"	f	typeref:typename:void	file:
s32_from_s8	./cm_string.c	/^s32_from_s8(S8 from, u32 *str32)$/;"	f	typeref:typename:S32	file:
shell_execute	./cm_proc_threads.c	/^shell_execute(char* path, char* args)$/;"	f	typeref:typename:bool
show_error_msg_box	./cm_error_handling.c	/^show_error_msg_box(char* str, DWORD err)$/;"	f	typeref:typename:void	file:
show_error_msg_box_v	./cm_error_handling.c	/^show_error_msg_box_v(DWORD err, ...)$/;"	f	typeref:typename:void	file:
show_error_msg_console	./cm_error_handling.c	/^show_error_msg_console(char* str, DWORD err)$/;"	f	typeref:typename:void	file:
show_error_msg_console_v	./cm_error_handling.c	/^show_error_msg_console_v(DWORD err, ...)$/;"	f	typeref:typename:void	file:
str_ncmp	./cm_string.c	/^#define str_ncmp(str, ...) str_ncmp_/;"	d	file:
str_ncmp_impl	./cm_string.c	/^str_ncmp_impl(char* src, ...)$/;"	f	typeref:typename:bool
string_len	./cm_string.c	/^string_len(S8 str)$/;"	f	typeref:typename:force_inline size_t
success	./cm_macro_defs.c	/^#define success /;"	d	file:
thread_static	./cm_macro_defs.c	/^  #define thread_static /;"	d	file:
u16	./cm_types.h	/^typedef unsigned short      u16;$/;"	t	typeref:typename:unsigned short
u32	./cm_types.h	/^typedef unsigned int        u32;$/;"	t	typeref:typename:unsigned int
u64	./cm_types.h	/^typedef unsigned long long  u64;$/;"	t	typeref:typename:unsigned long long
u8	./cm_types.h	/^typedef unsigned char       u8;$/;"	t	typeref:typename:unsigned char
unix_time	./chichi_timer.c	/^unix_time(struct timespec *spec)$/;"	f	typeref:typename:void
utf8_class	./cm_string.c	/^global u8 utf8_class[32] = {$/;"	v	typeref:typename:global u8[32]
utf8_decode	./cm_string.c	/^utf8_decode(u8 *str, u64 max)$/;"	f	typeref:typename:UnicodeDecode	file:
v_add	./cm_generic_containers.c	/^#define v_add(/;"	d	file:
v_init	./cm_generic_containers.c	/^#define v_init(/;"	d	file:
v_release	./cm_generic_containers.c	/^#define v_release(/;"	d	file:
w2ux	./chichi_timer.c	/^#define w2ux /;"	d	file:
window_create	./cm_events.c	/^window_create(cmWindow* win, WNDPROC win_proc, bool show)$/;"	f	typeref:typename:void	file:
write_file	./cm_string.c	/^write_file(HANDLE h, void* buffer, u32 length)$/;"	f	typeref:typename:i64
write_file	./cm_string.c	/^write_file(i32 fd, void* buffer, ui32 length)$/;"	f	typeref:typename:i32
